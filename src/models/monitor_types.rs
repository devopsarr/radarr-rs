/*
 * Radarr
 *
 * Radarr API docs
 *
 * The version of the OpenAPI document: v5.26.2.10099
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum MonitorTypes {
    #[serde(rename = "movieOnly")]
    MovieOnly,
    #[serde(rename = "movieAndCollection")]
    MovieAndCollection,
    #[serde(rename = "none")]
    None,

}

impl std::fmt::Display for MonitorTypes {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::MovieOnly => write!(f, "movieOnly"),
            Self::MovieAndCollection => write!(f, "movieAndCollection"),
            Self::None => write!(f, "none"),
        }
    }
}

impl Default for MonitorTypes {
    fn default() -> MonitorTypes {
        Self::MovieOnly
    }
}

