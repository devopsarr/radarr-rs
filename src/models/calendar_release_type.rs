/*
 * Radarr
 *
 * Radarr API docs
 *
 * The version of the OpenAPI document: v5.26.2.10099
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum CalendarReleaseType {
    #[serde(rename = "cinemaRelease")]
    CinemaRelease,
    #[serde(rename = "digitalRelease")]
    DigitalRelease,
    #[serde(rename = "physicalRelease")]
    PhysicalRelease,

}

impl std::fmt::Display for CalendarReleaseType {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::CinemaRelease => write!(f, "cinemaRelease"),
            Self::DigitalRelease => write!(f, "digitalRelease"),
            Self::PhysicalRelease => write!(f, "physicalRelease"),
        }
    }
}

impl Default for CalendarReleaseType {
    fn default() -> CalendarReleaseType {
        Self::CinemaRelease
    }
}

