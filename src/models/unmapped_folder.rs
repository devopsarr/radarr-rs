/*
 * Radarr
 *
 * Radarr API docs
 *
 * The version of the OpenAPI document: v5.18.4.9674
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct UnmappedFolder {
    #[serde(rename = "name", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub name: Option<Option<String>>,
    #[serde(rename = "path", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub path: Option<Option<String>>,
    #[serde(rename = "relativePath", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub relative_path: Option<Option<String>>,
}

impl UnmappedFolder {
    pub fn new() -> UnmappedFolder {
        UnmappedFolder {
            name: None,
            path: None,
            relative_path: None,
        }
    }
}

